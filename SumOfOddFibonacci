// Sum All Odd Fibonacci Numbers
// Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

// The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

// For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.
//Pseudocode
//step1: Initialize fib0,fib1,sum variables;
//step2:initialize temSumvariable
//step3:Traverse through the while loop until tmpSum is equal to or less than num;
//step4:Checking its oddness
//step5)Add tmpSum to the total sum
//step6) Swapping occurs between fib0 and fib1
//step7)Return our sum;


 function fib (num) {
   let fib0 = 1;
   let fib1 =1 ;
   let sum = 2;
   let tmpSum = fib0 + fib1;
   while(tmpSum <= num)
     {
       if(tmpSum % 2 != 0)
       {
         sum+= tmpSum;
       }
       fib0 = fib1;
       fib1 = tmpSum;
       tmpSum = fib1 + fib0;
     }
   return sum;
 }
 console.log(fib (10))

